package packagetoupdate;

import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.*;

import java.lang.reflect.InvocationTargetException;

import com.chubb.location.library.interfaces.SoapClientInterface;

@RestController
@RequestMapping("/api")
public class nametoupdateController {
	private final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(this.getClass());

	@Value("nametoupdate Service")
    private String greetingMessage;
	
    @GetMapping("/index")
    public String execute() {
    	LOGGER.debug("nametoupdateController.execute");
    	
    	try {    	    	
	    	Class<?> clazz = Class.forName("servicetoupdate");
	        Object instance = clazz.getDeclaredConstructor().newInstance();
	        LOGGER.debug("instance : " + instance);
	    	
	    	Class<?> clazzReq = Class.forName("inputclasstoupdate");
	                    
	        Object instanceReq = clazzReq.getDeclaredConstructor().newInstance();
	        LOGGER.debug("instanceReq : " + instanceReq);
	            
	    	Class<?> clazzRes = Class.forName("outputclasstoupdate");
	
	        // Create a new instance (assumes a no-arg constructor)
	        Object instanceRes = clazzRes.getDeclaredConstructor().newInstance();
	        LOGGER.debug("instanceRes : " + instanceRes);
	
	        if (instance instanceof SoapClientInterface) {
	          	instanceRes = ((SoapClientInterface) instance).invokeService(instanceReq);
	           	LOGGER.debug("final instanceRes : " + instanceRes);
	        }
	    } catch (ClassNotFoundException |
                 InstantiationException |
                 IllegalAccessException |
                 NoSuchMethodException |
                 InvocationTargetException e) {
            e.printStackTrace();
        }
    	
        return greetingMessage;
    }
}